@page "/admin/countries"
@inject ICountryService countryService
@inject IToggleService toggleService
@inject NavigationManager navigationManager
@attribute [Authorize(Roles = "Admin")]

<PageTitle>Countries</PageTitle>

<div class="border m-1 p-3 rounded-3">
    <h3 class="my-main-title">Countries</h3><hr />

    @if (loading)
    {
       @* <div class="text-center justify-content-center ">
            <div class="border-bottom border-primary spinner-border mb-2"></div>
            <div>@message</div>            
        </div>*@
        <Loading Message=@message></Loading>
    }
    else
    {
        <button class="btn btn-primary float-end mb-3" @onclick="CreateCountry">
            <i class="oi oi-plus"></i>
            Add New Country
        </button>
        <table class="table table-striped table-sm border">
            <thead>
                <tr>
                    <th width="20px"></th>
                    <th>Country</th>
                    <th style="text-align:center">Active</th>
                    <th style="text-align:center">Edit Country</th>
                    <th style="text-align:center">View States</th>
                </tr>
            </thead>
            <tbody class="@toggleService.NavMenuCssClass">
                <Virtualize Items="countryService.AdminCountries" Context="country">
                    <tr>
                        <td width="5px">
                            <div class="row">
                                <a class="nav-link px-1" @onclick="() => toggleService.TogleSubmenu(country.Id)">
                                    @if (country.Id == toggleService.NavSubmenuId && country.States.Count != 0)
                                    {
                                        <span class="oi oi-minus" aria-hidden="true"></span>
                                    }
                                    else if (country.States.Count != 0)
                                    {
                                        <span class="oi oi-plus" aria-hidden="true"></span>
                                    }
                                </a>
                            </div>
                        </td>
                        <td>
                            <span>@country.Name</span>
                            <div class="row px-6">
                                @if (country.Id == toggleService.NavSubmenuId)
                                {
                                    @if (country.States.Count != 0)
                                    {
                                        <table class="table table-striped table-sm border">
                                            <thead>
                                                <tr class="px-10">
                                                    <th>States</th>
                                                    <th style="text-align:center">Active</th>
                                                    <th style="text-align:center">Edit</th>
                                                </tr>
                                            </thead>
                                            <tbody>
                                                @foreach (var state in country.States)
                                                {
                                                    <tr>
                                                        <td>
                                                            <span>@state.Name</span>
                                                        </td>
                                                        <td style="text-align:center">
                                                            <span>@(state.IsActive ? "✔️" : "❌")</span>
                                                        </td>
                                                        <td style="text-align:center">
                                                            <span>
                                                                <a class="btn btn-outline-primary btn-sm" title="Edit State" @onclick="(() => EditState(state.Id))">
                                                                    <i class="oi oi-pencil"></i>
                                                                </a>
                                                            </span>
                                                        </td>
                                                    </tr>
                                                }
                                            </tbody>
                                        </table>
                                    }
                                }
                            </div>
                        </td>
                        <td class="my-text-align-center">@(country.IsActive ? "✔️" : "❌")</td>
                        <td class="my-text-align-center">
                            <button class="btn btn-outline-primary btn-sm" @onclick="(() => EditCountry(country.Id))" title="Edit Country">
                                <i class="oi oi-pencil"></i>
                            </button>
                        </td>
                        <td style="text-align:center">
                            <button class="btn btn-outline-success btn-sm position-relative" @onclick="(() => ViewStates(country.Id))" title="View States">
                                <i class="oi oi-eye"></i>
                                <span class="position-absolute top-0 start-100 translate-middle badge rounded-pill" style="background-color: teal;">
                                    @country.States.Count
                                </span>
                            </button>
                        </td>
                    </tr>
                </Virtualize>
            </tbody>
        </table>
    }
</div>

@code {

    bool loading = true;
    string message = "Loading Countries...";

    [CascadingParameter] public Error error { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            await countryService.GetAdminCountries();
            if (countryService.AdminCountries == null)
            {
                message = "You have not entered any country.";
                return;
            }
            loading = false;
        }
        catch (Exception ex)
        {
            error.ProcessError(ex);
        }
    }

    void EditCountry(int countryId)
    {
        navigationManager.NavigateTo($"admin/country/{countryId}");
    }

    void CreateCountry()
    {
        navigationManager.NavigateTo("admin/country");
    }

    void EditState(int stateId)
    {
        navigationManager.NavigateTo($"admin/state/{stateId}");
    }

    void ViewStates(int countryId)
    {
        navigationManager.NavigateTo($"admin/states/{countryId}");
    }
}
