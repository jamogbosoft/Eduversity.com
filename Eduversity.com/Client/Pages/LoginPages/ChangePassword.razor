@page "/change-password"
@inject IAuthService authService
@inject IToastService toastService
@attribute [Authorize]

<PageTitle>Change Password</PageTitle>

<div class="card shadow m-0">
    <div class="card-header">
        <h5 class="my-main-title">Change Password</h5>
    </div>
    <div class="card-body">
        @if (!ChangeUserPassword)
        {
            <span>
                <button class="btn btn-outline-secondary" @onclick="EnableChangePassword">Change Password</button>
            </span>
        }
        else
        {
            <EditForm Model="user" OnValidSubmit="HandleChangeUserPassword">
                <DataAnnotationsValidator />

                <div class="col-12 row" style="font-weight:bold">
                    <span class="@messageCssClass col-12 mb-3">@message</span>
                </div>
                <div class="col-12 row mb-4">
                    <InputText id="oldPassword" @bind-Value="user.OldPassword" class="form-control" type="password" placeholder="Old Password" />
                    <ValidationMessage For="@(() => user.OldPassword)" class="text-start" />
                </div>
                <div class="col-12 row mb-4">
                    <InputText id="newPassword" @bind-Value="user.NewPassword" class="form-control" type="password" placeholder="New Password" />
                    <ValidationMessage For="@(() => user.NewPassword)" class="text-start" />
                </div>
                <div class="col-12 row mb-4">
                    <InputText id="confirmNewPassword" @bind-Value="user.ConfirmNewPassword" class="form-control" type="password" placeholder="Confirm New Password" />
                    <ValidationMessage For="@(() => user.ConfirmNewPassword)" class="text-start" />
                </div>
                <button type="submit" class="btn btn-primary">Change Password</button>
                @if (showCancelButton)
                {
                    <button class="btn btn-danger mx-3" @onclick="CancelChangePassword">Cancel</button>
                }
            </EditForm>
        }
    </div>
</div>

@code {
    UserChangePasswordRequest user = new UserChangePasswordRequest();
    string message = string.Empty;
    string messageCssClass = string.Empty;

    [Parameter]
    public bool ChangeUserPassword { get; set; } = true;
    public bool showCancelButton { get; set; } = false;

    private async Task HandleChangeUserPassword()
    {
        try
        {
            messageCssClass = "text-info";
            message = "Changing password...";
            var result = await authService.ChangePassword(user);
            message = result.Message;
            if (result.Success)
            {
                messageCssClass = "text-success";
                toastService.ShowSuccess(message);
            }
            else
            {
                messageCssClass = "text-warning";
                // toastService.ShowWarning(message);
            }
            user = new UserChangePasswordRequest();
        }
        catch (Exception ex)
        {
            messageCssClass = "text-danger";
            toastService.ShowError(ex.Message);
        }
    }

    private void EnableChangePassword()
    {
        ChangeUserPassword = true;
        showCancelButton = true;
    }

    private void CancelChangePassword()
    {
        ChangeUserPassword = false;
    }

}
