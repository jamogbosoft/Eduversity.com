@page "/signup"
@inject AuthenticationStateProvider authenticationStateProvider
@inject NavigationManager navigationManager
@inject Blazored.LocalStorage.ILocalStorageService localStorageService
@inject IAuthService authService
@inject IToastService toastService

<PageTitle>Sign Up</PageTitle>

<div class="border m-0 p-3 rounded-3">
    <EditForm Model="user" OnValidSubmit="HandleRegistration">
        <DataAnnotationsValidator></DataAnnotationsValidator>
        <div>
            <br />
        </div>
        <div>
            <h3 class="my-main-title">Create An Account</h3>
        </div>
        <div>
            <br />
        </div>
        <div class="col-12 row" style="font-weight:bold">
            <span class="@messageCssClass col-12 mb-3">@message</span>
        </div>
        <div class="col-12 row mb-4">
            <InputText id="username" @bind-Value="user.UserName" class="form-control rounded-pill" placeholder="Email Address" />
            <ValidationMessage For="@(() => user.UserName)" />
        </div>
        <div class="col-12 row mb-4">
            <InputText id="password" @bind-Value="user.Password" class="form-control rounded-pill" type="Password" placeholder="Password" />
            <ValidationMessage For="@(() => user.Password)" />
        </div>
        <div class="col-12 row mb-4">
            <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control rounded-pill" type="Password" placeholder="Confirm Password" />
            <ValidationMessage For="@(() => user.ConfirmPassword)" />
        </div>
        <div class="col-12 row">
            <span class="col-12"></span>
            <button type="submit" class="btn btn-primary col-6">Sign up</button>
            <a href="/signin" class="col-6">Already a user?</a>
        </div>
        <br />

    </EditForm>
</div>
@code {

    UserRegister user = new UserRegister();

    string message = string.Empty;
    string messageCssClass = string.Empty;

    async Task HandleRegistration()
    {
        try
        {
            messageCssClass = "text-info";
            message = "Creating a new account...";
            var result = await authService.Register(user);
            message = result.Message;
            if (result.Success)
            {
                messageCssClass = "text-success";
                message += " Login into your account.";
                toastService.ShowSuccess(message);
            }
            else
            {
                messageCssClass = "text-warning";
                toastService.ShowWarning(message);

            }
        }
        catch (Exception ex)
        {
            messageCssClass = "text-danger";
            toastService.ShowError(ex.Message);
        }
    }
}
