@inject IGenderService genderService
@inject IMaritalStatusService maritalStatusService
@inject IPassportService passportService
@attribute [Authorize(Roles = "Admin,Lecturer,HOD")]

@if (loading)
{
    <span>@message</span>
}
else
{
    <div class="row card-details shadow">
        <div class="col-sm-4 mb-3">
            <img src="@(lecturer.Image != string.Empty? lecturer.Image: passportService.DefaultImage)" class="form-control my-passport">
            <span><strong>@lecturer.Name</strong></span><br>
            <span><em><small>@lecturer.AcademicDetail.Certifications</small></em></span><br><br>
            <span> <strong>Designation</strong></span><br>
            <span class="font-italic"> @lecturer.AcademicDetail.Designation</span><br>

        </div>
        <div class="col-sm-8">
            <p><strong>Faculty:</strong> @lecturer.AcademicDetail.FacultyName</p>
            <p><strong>Department:</strong> @lecturer.AcademicDetail.DepartmentName</p>
            <p><strong>Specialization:</strong> @lecturer.AcademicDetail.Specialisation</p>
            <p><strong>Activities:</strong> @lecturer.AcademicDetail.Activities</p>
            <p><strong>Professional Affiliation:</strong> @lecturer.AcademicDetail.ProfessionalAffiliation</p>
            <p><strong>Award(s):</strong> @lecturer.AcademicDetail.Award</p>

        </div>
    </div>

    @if (lecturer.AcademicDetail.Qualifications != null && lecturer.AcademicDetail.Qualifications.Count != 0)
    {
        <h5 class="my-main-title">Qualifications</h5>

        <div class="table-responsive table-responsive-sm">
        <table class="table table-striped table-sm border text-sm-start row-col-sm-10 d-xxl-table-row">
            <thead class="bg-light">
                <tr>
                    <th>Degree</th>
                    <th>Course</th>
                    <th>Institution</th>
                    <th>Year</th>
                </tr>
            </thead>
            <tbody>
                <Virtualize Items="lecturer.AcademicDetail.Qualifications" Context="qualification">
                    <tr>
                        <td class="text-sm-start">@qualification.Degree</td>
                        <td class="text-sm-start">@qualification.CourseOfStudy</td>
                        <td>@qualification.Institution</td>
                        <td>@qualification.YearGraduated</td>
                    </tr>
                </Virtualize>
            </tbody>
        </table>
        </div>
        <hr />
    }
}


@code {

    bool loading = true;
    string message = "Loading Lecturer's Detail...";

    [Parameter]
    public LecturerResponse lecturer { get; set; } = new();

    [CascadingParameter]
    public Error error { get; set; }

    protected override void OnParametersSet()
    {
        loading = false;
    }

    private string GetGender()
    {
        try
        {
            var gender = genderService.Genders.FirstOrDefault(s => s.Value == lecturer.Gender);
            if (gender is null)
            {
                return lecturer.Gender;
            }
            return gender.Name;
        }
        catch (Exception ex)
        {
            error.ProcessError(ex);
            return string.Empty;
        }
    }

    private string GetMaritalStatus()
    {
        try
        {
            var maritalStatus = maritalStatusService.Status.FirstOrDefault(s => s.Value == lecturer.MaritalStatus);
            if (maritalStatus == null)
            {
                return lecturer.MaritalStatus;
            }
            return maritalStatus.Name;
        }
        catch (Exception ex)
        {
            error.ProcessError(ex);
            return string.Empty;
        }
    }
}
