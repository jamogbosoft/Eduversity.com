@inject IAuthService authService
@inject IToastService toastService
@inject NavigationManager navigationManager

@if (!resetPassword)
{
    <div class="card shadow m-0">
        <div class="card-header">
            <h5 class="my-main-title">Forgot Your Password?</h5>
        </div>
        <div class="card-body">
            <EditForm Model="user" OnValidSubmit="HandleSubmit">
                <DataAnnotationsValidator />

                <div class="col-12 row" style="font-weight:bold">
                    <span class="@messageCssClass col-12 mb-3">@message</span>
                </div>
                <div class="col-12 row mb-2">
                    <h6 class="alert alert-info">
                        Enter your email address so we can send you an email to reset your password.
                    </h6>
                </div>
                <div class="col-12 row mb-4">
                    <InputText id="email" @bind-Value="user.Email" class="form-control rounded-pill" placeholder="Email Address" />
                    <ValidationMessage For="@(() => user.Email)" />
                </div>

                <div class="col-12 row">
                    <span class="col-12"></span>
                    <button type="submit" class="btn btn-primary btncol mb-3">Submit</button>
                    <span class="spancol"></span>
                    <button @onclick="HandleCancel" class="btn btn-danger btncol mb-3">Cancel</button>
                </div>
                <br />
            </EditForm>
        </div>
    </div>
}
else
{
    <ResetPasswordComponent EmailAddress="@user.Email" />
}

@code {

    UserForgotPasswordRequest user = new UserForgotPasswordRequest();

    string message = string.Empty;
    string messageCssClass = string.Empty;
    bool resetPassword = false;

    private async Task HandleSubmit()
    {
        try
        {
            messageCssClass = "text-info";
            message = "Processing...";

            var result = await authService.ForgotPasswordAsync(user);

            message = result.Message;
            if (result.Success)
            {
                resetPassword = true;
            }
            else
            {
                messageCssClass = "text-warning";
                toastService.ShowWarning(message);
            }
        }
        catch (Exception ex)
        {
            messageCssClass = "text-danger";
            toastService.ShowError(ex.Message);
        }
    }

    private void HandleCancel()
    {
        navigationManager.NavigateTo("");
    }
}