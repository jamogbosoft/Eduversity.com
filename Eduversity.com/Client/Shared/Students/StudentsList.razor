@inject IStudentService studentService
@inject IGenderService genderService
@inject IToastService toastService
@inject NavigationManager navigationManager
@using Microsoft.AspNetCore.Components.QuickGrid
@implements IDisposable
@attribute [Authorize(Roles = "Admin,HOD")]

<div class="border m-1 p-3 rounded-3 mb-3">
    <h3 class="my-main-title">Students</h3><hr />

@if (loading)
{
    <span>@message</span>
}
else
{
    @if (studentService.Students == null || studentService.Students.Count == 0)
    {
        <span>No Record Found</span>
    }
    else
    {
            <table class="table table-sm table-striped border">
            <thead>
                <tr >
                    <th>Student</th>
                    <th>Gender</th>
                    <th>Reg. Number</th>
                    <th>Course of Study</th>
                    <th style="text-align:center">Level</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                <Virtualize Items="studentService.Students" Context="student">
                    <tr >
                        <td>
                            <span>@student.LastName, @student.FirstName @student.MiddleName</span>
                        </td>
                        <td>
                            <span>
                                @GetGender(student)
                            </span>
                        </td>
                        <td><span>@student.AcademicDetail.RegNumber</span> </td>
                        <td><span>@student.AcademicDetail.DepartmentOptionName</span> </td>
                        <td class="my-text-align-center"><span>@student.AcademicDetail.Level</span> </td>
                        <td class="my-text-align-center">
                            <button class="btn btn-primary btn-sm position-relative" @onclick="(() => ViewProfile(student.UserId))" title="View Profile">
                                <i class="oi oi-eye"></i>
                            </button>
                        </td>
                    </tr>
                </Virtualize>
            </tbody>
        </table>

        for (var i = 1; i <= studentService.PageCount; i++)
        {
            <a class="btn
                 @(i == studentService.CurrentPage ? "btn-primary" : "btn-outline-primary")
                 page-selection me-2"
       href="/@From/students/search/@studentService.LastSearchText/@i">@i</a>
        }          
    }
}

</div>

@code {

    bool loading = true;
    string message = "Loading Students...";

    [Parameter]
    public string From { get; set; } = string.Empty; //= "admin" or "department"

    [CascadingParameter]
    public Error error { get; set; } = new();

    protected override void OnInitialized()
    {
        studentService.StudentsChanged += StateHasChanged;
        loading = false;
    }

    public void Dispose()
    {
        studentService.StudentsChanged -= StateHasChanged;
    }

    void ViewProfile(long userId)
    {
        navigationManager.NavigateTo($"{From}/student/{userId}");
    }

    private string GetGender(StudentResponse student)
    {
        try
        {
            var gender = genderService.Genders.FirstOrDefault(s => s.Value == student.Gender);
            if (gender == null)
            {
                return student.Gender;
            }
            return gender.Name;
        }
        catch (Exception ex)
        {
            error.ProcessError(ex);
            return string.Empty;
        }
    }
}